---
- hosts: all
  become: true
  pre_tasks:
    - name: Upgrade packages
      apt:
        upgrade: dist
        update_cache: true
      when: ansible_distribution == "Ubuntu"

    - name: Reboot
      reboot:

    - name: Remove deprecated Docker installs
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent
      when: ansible_distribution == "Ubuntu"

    - name: Install dependencies for Docker and docker-compose
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
          - python3-pip
        state: latest
      when: ansible_distribution == "Ubuntu"
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ansible_distribution_release}} stable
        state: present
      when: ansible_distribution == "Ubuntu"

    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        update_cache: true
        state: latest
      when: ansible_distribution == "Ubuntu"

    - name: Check if docker-compose is already installed
      command:
        cmd: docker-compose --version
      register: dc_exists
      ignore_errors: true
      when: ansible_distribution == "Ubuntu"

    - name: Install docker-compose
      pip:
        name: docker-compose
        state: latest
      when: ansible_distribution == "Ubuntu" and dc_exists.rc != 0
    
    - name: Install Docker SDK
      pip:
        name: docker
        state: latest
      when: ansible_distribution == "Ubuntu"
    
  tasks:
    - name: Clone repo into /srv/
      git:
        repo: https://github.com/NatsumiHB/Private-Infrastructure.git
        dest: /srv/infra
      
    - name: Create nginx network
      docker_network:
        name: nginx-net
        state: present
    
    - name: Start GitLab
      docker_compose:
        project_src: /srv/infra/gitlab
        state: present
    
    - name: Start Docker registry
      docker_compose:
          project_src: /srv/infra/docker-registry
          state: present
    
    - name: Copy TLS certificates
      copy:
        src: "{{ playbook_dir }}/nginx/config/certs"
        dest: /srv/infra/nginx/config
        mode: 0600
    
    - name: Start nginx
      docker_compose:
        project_src: /srv/infra/nginx
        state: present
